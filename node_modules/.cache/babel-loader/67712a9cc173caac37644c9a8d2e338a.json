{"ast":null,"code":"import _slicedToArray from \"/Users/Monika/Desktop/Programowanie/HalinaBand/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Monika/Desktop/Programowanie/HalinaBand/src/pages/MyProfile/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Content } from \"../../components/PageSection\";\nimport { UserName, Avatar, Loading } from \"./styled\";\nimport loading from \"../../images/loading.gif\";\nconst GITHUB_USERNAME = \"MadameMeduse\";\nexport const MyProfile = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        avatarUrl = _useState4[0],\n        setAvatarUrl = _useState4[1];\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"https://api.github.com/users/\".concat(GITHUB_USERNAME));\n      const user = await response.json();\n      setName(user.name);\n      setAvatarUrl(user.avatar_url);\n    })();\n  }, []);\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, name ? React.createElement(React.Fragment, null, React.createElement(UserName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, name), React.createElement(Avatar, {\n    src: avatarUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })) : React.createElement(Loading, {\n    src: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/Monika/Desktop/Programowanie/HalinaBand/src/pages/MyProfile/index.js"],"names":["React","useEffect","useState","Content","UserName","Avatar","Loading","loading","GITHUB_USERNAME","MyProfile","name","setName","avatarUrl","setAvatarUrl","response","fetch","user","json","avatar_url"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,QAA0C,UAA1C;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,eAAe,GAAG,cAAxB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACHP,QAAQ,EADL;AAAA;AAAA,QACpBQ,IADoB;AAAA,QACdC,OADc;;AAAA,qBAEOT,QAAQ,EAFf;AAAA;AAAA,QAEpBU,SAFoB;AAAA,QAETC,YAFS;;AAI3BZ,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMa,QAAQ,GAAG,MAAMC,KAAK,wCAAiCP,eAAjC,EAA5B;AACA,YAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,MAAAA,OAAO,CAACK,IAAI,CAACN,IAAN,CAAP;AACAG,MAAAA,YAAY,CAACG,IAAI,CAACE,UAAN,CAAZ;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,IAAI,GAEG,0CACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWA,IAAX,CADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFH,GAQG,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEL,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATZ,CADJ;AAeH,CA5BM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Content } from \"../../components/PageSection\";\nimport { UserName, Avatar, Loading } from \"./styled\";\nimport loading from \"../../images/loading.gif\";\n\nconst GITHUB_USERNAME = \"MadameMeduse\";\n\nexport const MyProfile = () => {\n    const [name, setName] = useState();\n    const [avatarUrl, setAvatarUrl] = useState();\n\n    useEffect(() => {\n        (async () => {\n            const response = await fetch(`https://api.github.com/users/${GITHUB_USERNAME}`);\n            const user = await response.json();\n            setName(user.name);\n            setAvatarUrl(user.avatar_url);\n        })();\n    }, []);\n\n    return (\n        <Content>\n            {name\n                ? (\n                    <>\n                        <UserName>{name}</UserName>\n                        <Avatar src={avatarUrl} />\n                    </>\n                )\n                : (\n                    <Loading src={loading} />\n                )\n            }\n        </Content>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}