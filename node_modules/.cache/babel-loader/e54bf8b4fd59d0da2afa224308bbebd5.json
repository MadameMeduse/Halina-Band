{"ast":null,"code":"var _jsxFileName = \"/Users/Monika/Desktop/Programowanie/HalinaBand/src/pages/Home/sections/Task3/index.js\";\nimport React from \"react\";\nimport { ExamplePreview } from \"components/ExamplePreview\";\nimport * as S from \"components/PageSection\";\nimport previewImg from \"./assets/card.png\";\nexport const Task3 = () => React.createElement(S.Wrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(S.Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(S.Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(S.Title, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"Halina Band\"), React.createElement(S.Description, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Officiis repellendus beatae iusto non culpa optio deleniti. Fugiat, voluptatum minima, cum assumenda sapiente dolore, temporibus dolores officia nobis doloribus minus et!\"), React.createElement(S.BulletedList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"It should be accessible under \", React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"/my-profile\"), \" route.\"), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"It should consist of the \", React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"<Header />\"), \" component and another component displaying info about a GitHub user.\"), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"Ideally, you should use your own username for fetching data.\"), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"The content should consist of two items - the \", React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"name\"), \" of the user and their \", React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"avatar_url\"), \".\"), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"You \", React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, \"must\"), \" use the GitHub users API (\", React.createElement(\"a\", {\n  href: \"https://developer.github.com/v3/users/#get-a-single-user\",\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"click here to view the docs\"), \").\"), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"The user data \", React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"must be fetched\"), \" from the API when the page is opened.\"), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"You can install any dependency you need to accomplish this task.\")), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), React.createElement(S.Description, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"This simple card should look as shown in the screen below.\"), React.createElement(ExamplePreview, {\n  src: previewImg,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), React.createElement(S.Description, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, \"If you have some time left, you can add a loader!\"))));","map":{"version":3,"sources":["/Users/Monika/Desktop/Programowanie/HalinaBand/src/pages/Home/sections/Task3/index.js"],"names":["React","ExamplePreview","S","previewImg","Task3"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAO,KAAKC,CAAZ,MAAmB,wBAAnB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,MAAMC,KAAK,GAAG,MACnB,oBAAC,CAAD,CAAG,OAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,CAAD,CAAG,OAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,CAAD,CAAG,MAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,CAAD,CAAG,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yOAFF,EAQE,oBAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADhC,YADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAO,YAAP,CAD3B,0EAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDACgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADhD,6BAEqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFrB,MATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADN,iCAEE;AACE,EAAA,IAAI,EAAC,0DADP;AAEE,EAAA,MAAM,EAAC,QAFT;AAGE,EAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,OAbF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADhB,2CAxBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEA5BF,CARF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxCF,EAyCE,oBAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAzCF,EA4CE,oBAAC,cAAD;AAAgB,EAAA,GAAG,EAAED,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA5CF,EA6CE,oBAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDA7CF,CADF,CADF,CADK","sourcesContent":["import React from \"react\";\n\nimport { ExamplePreview } from \"components/ExamplePreview\";\nimport * as S from \"components/PageSection\";\n\nimport previewImg from \"./assets/card.png\";\n\nexport const Task3 = () => (\n  <S.Wrapper>\n    <S.Content>\n      <S.Header>\n        <S.Title>Halina Band</S.Title>\n        <S.Description>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Officiis\n          repellendus beatae iusto non culpa optio deleniti. Fugiat, voluptatum\n          minima, cum assumenda sapiente dolore, temporibus dolores officia\n          nobis doloribus minus et!\n        </S.Description>\n        <S.BulletedList>\n          <li>\n            It should be accessible under <span>/my-profile</span> route.\n          </li>\n          <li>\n            It should consist of the <span>{\"<Header />\"}</span> component and\n            another component displaying info about a GitHub user.\n          </li>\n          <li>Ideally, you should use your own username for fetching data.</li>\n          <li>\n            The content should consist of two items - the <span>name</span> of\n            the user and their <span>avatar_url</span>.\n          </li>\n          <li>\n            You <span>must</span> use the GitHub users API (\n            <a\n              href=\"https://developer.github.com/v3/users/#get-a-single-user\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              click here to view the docs\n            </a>\n            ).\n          </li>\n          <li>\n            The user data <span>must be fetched</span> from the API when the\n            page is opened.\n          </li>\n          <li>\n            You can install any dependency you need to accomplish this task.\n          </li>\n        </S.BulletedList>\n        <br />\n        <S.Description>\n          This simple card should look as shown in the screen below.\n        </S.Description>\n        <ExamplePreview src={previewImg} />\n        <S.Description>\n          If you have some time left, you can add a loader!\n        </S.Description>\n      </S.Header>\n    </S.Content>\n  </S.Wrapper>\n);\n"]},"metadata":{},"sourceType":"module"}